imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: adherent.yml }
    - { resource: assets_version.yml }
    - { resource: services/ }

parameters:
    locale:                      fr
    pattern_uuid:                '[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}'
    pattern_sha1:                '[0-9A-Fa-f]{40}'
    pattern_coordinate:          '-?\d+(\.\d{1,7})?'
    timeline_max_messages:       30
    search_max_results:          30
    enable_canary:               "%env(ENABLE_CANARY)%"
    procurations_reply_to_email: 'archiveprocurations@en-marche.fr'
    transactional_sender_email:  'contact@en-marche.fr'
    transactional_sender_name:   'En Marche !'
    campaign_sender_email:       'jemarche@en-marche.fr'
    campaign_sender_name:        'En Marche !'
    feed_ttl:                    60 # in minutes
    legislatives_financial_hotline_email: 'comptes.legislatives@en-marche.fr'
    legislatives_standard_hotline_email: 'campagne.legislatives@en-marche.fr'
    algolia.application_id:      '%env(ALGOLIA_APP_ID)%'
    algolia.api_key:             '%env(ALGOLIA_BACK_API_KEY)%'
    app_host:                    '%env(APP_HOST)%'
    amp_host:                    '%env(AMP_HOST)%'
    legislatives_host:           '%env(LEGISLATIVES_HOST)%'
    auth_user_profile:           '%env(AUTH_API_URL)%/espace-personnel/edit'
    auth_forgot_password:        '%env(AUTH_API_URL)%/forgot-password'
    auth_unsubscribe:            '%env(AUTH_API_URL)%/espace-personnel/unsubscribe'
    auth_client_id:              '%env(AUTH_CLIENT_ID)%'

framework:
    translator:      { fallbacks: ["%locale%"], paths: ['%kernel.project_dir%/translations'] }
    secret:          "%env(SECRET)%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    session:
        name:        enmarche
        handler_id:  snc_redis.session.handler
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    cache:
        app: cache.adapter.doctrine
        default_doctrine_provider: cache.redis_doctrine_provider

twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    paths:
        '%kernel.project_dir%/templates/TwigBundle': Twig
        '%kernel.project_dir%/templates': ~
    globals:
        assets_hash:            "%assets_hash%"
        sentry_dsn:             "%env(SENTRY_PUBLIC_DSN)%"
        enable_canary:          "%env(ENABLE_CANARY)%"
        recaptcha_public_key:   "%env(RECAPTCHA_PUBLIC_KEY)%"
        google_maps_api_key:    "%env(GMAPS_API_KEY)%"
        algolia_app_id:         "%env(ALGOLIA_APP_ID)%"
        algolia_api_key:        "%env(ALGOLIA_FRONT_API_KEY)%"
        url_legacy:             "https://adherents.en-marche.fr"
        legacy_adhesion:        "https://adherents.en-marche.fr/adherer.html"
        legislatives_platform:  "%env(LEGISLATIVES_PLATFORM)%"
        algolia_blacklist:      "%env(ALGOLIA_BLACKLIST)%"
        url_help_en_marche:     "https://aide.en-marche.fr"
        auth_register_url:      "%env(AUTH_API_URL)%/register?client_id=%env(AUTH_CLIENT_ID)%&redirect_uri=%env(APP_URL)%/register"
    form_themes:
        - 'form_theme.html.twig'
        - 'SonataCoreBundle:Form:datepicker.html.twig'
        - 'SonataCoreBundle:Form:colorpicker.html.twig'

doctrine:
    dbal:
        driver:           pdo_mysql
        charset:          UTF8
        host:             "%env(DATABASE_HOST)%"
        port:             "%env(DATABASE_PORT)%"
        dbname:           "%env(DATABASE_NAME)%"
        user:             "%env(DATABASE_USER)%"
        password:         "%env(DATABASE_PASSWORD)%"
        unix_socket:      "%env(DATABASE_SOCKET)%"
        server_version:   5.7
        options:
            1002: "SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''))"

        types:
            uuid:           Ramsey\Uuid\Doctrine\UuidType
            phone_number:   Misd\PhoneNumberBundle\Doctrine\DBAL\Types\PhoneNumberType
            geo_point:      AppBundle\Doctrine\DBAL\Types\GeoPointType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: false
        mappings:
            AppBundle:
                mapping: true
                type: annotation
                dir: 'Entity'
                alias: 'AppBundle'
                prefix: 'AppBundle\Entity'
                is_bundle: true

        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true

        dql:
            numeric_functions:
                acos: DoctrineExtensions\Query\Mysql\Acos
                cos: DoctrineExtensions\Query\Mysql\Cos
                radians: DoctrineExtensions\Query\Mysql\Radians
                sin: DoctrineExtensions\Query\Mysql\Sin
            string_functions:
                json_contains: AppBundle\Query\Mysql\JsonContains
                find_in_set: DoctrineExtensions\Query\Mysql\FindInSet

        hydrators:
            EventHydrator: AppBundle\Doctrine\Hydrators\EventHydrator

doctrine_migrations:
    dir_name: "%kernel.root_dir%/migrations"
    namespace: Migrations
    table_name: migrations
    name: En Marche migrations

stof_doctrine_extensions:
    default_locale: fr_FR
    orm:
        default:
            sluggable: true
            softdeleteable: true
            timestampable: true

lexik_paybox:
    parameters:
        production:  false
        site:        "%env(PAYBOX_SITE)%"
        rank:        "%env(PAYBOX_RANK)%"
        login:       "%env(PAYBOX_IDENTIFIER)%"
        hmac:
            key:     "%env(PAYBOX_KEY)%"

csa_guzzle:
    profiler: '%kernel.debug%'
    logger: true
    clients:
        mailjet_api:
            config:
                base_uri: 'https://api.mailjet.com/v3/'
                timeout: 2.0
                headers:
                    Content-Type: 'application/json'

        google_charts_api:
            config:
                base_uri: 'https://chart.googleapis.com'
                timeout: 2.0

        google_maps_static_api:
            config:
                base_uri: 'https://maps.googleapis.com'
                timeout: 2.0

        facebook_graph_api:
            config:
                base_uri: 'https://graph.facebook.com'
                timeout: 2.0

        auth:
            config:
                base_uri: "%env(AUTH_API_URL)%"
                timeout: 2.0

        api:
            config:
                base_uri: "%env(API_URL)%"
                timeout: 2.0

scheb_two_factor:
    google:
        enabled: true
        issuer: En Marche !
        template: security/admin_google_authenticator.html.twig

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]

sonata_admin:
    title_logo: logo/small_bg_white.jpg
    templates:
        layout:  admin/layout.html.twig
    security:
        handler: sonata.admin.security.handler.role

bazinga_geocoder:
    providers:
        cache:
            adapter:  app.geocoder.cache_adapter
            provider: google_maps
        google_maps:
            locale:  '%locale%'
            use_ssl: true
            api_key: '%env(GMAPS_API_KEY)%'

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: "redis://%env(REDIS_HOST)%"
    session:
        client: default

old_sound_rabbit_mq:
    connections:
        default:
            host: "%env(RABBITMQ_HOST)%"
            port: "%env(RABBITMQ_PORT)%"
            user: "%env(RABBITMQ_USER)%"
            password: "%env(RABBITMQ_PASSWORD)%"
            vhost: '/'
            lazy: false
            connection_timeout: 60
            read_write_timeout: 60
            keepalive: false
            heartbeat: 30

    producers:
        mailer_campaign:
            connection:       default
            exchange_options: { name: 'mailer-delayed-campaign', type: direct }
            class:            AppBundle\Producer\MailerProducer

        mailer_transactional:
            connection:       default
            exchange_options: { name: 'mailer-delayed-transactional', type: direct }
            class:            AppBundle\Producer\MailerProducer

        referent_message_dispatcher:
            connection:       default
            exchange_options: { name: 'referent-message-dispatcher', type: direct }
            class:            AppBundle\Producer\ReferentMessageDispatcherProducer

        api_broadcast_user_retry:
            connection:        default
            exchange_options:  { name: broadcast_retry, type: topic }
            queue_options:     { name: enmarche_broadcast_retry, routing_keys: ['#'] arguments: {'x-dead-letter-exchange': ['S', 'broadcast'], 'x-message-ttl': ['I', 360000] } }

        # Use on fixtures load to sync with the auth and api project
        enmarche_sync_user_create:
            connection: default
            exchange_options: { name: 'enmarche_sync_user_create', type: direct }
            queue_options:    { name: 'enmarche_sync_user_create', durable: true }

        project_citizen_creation_notification:
            connection: default
            exchange_options: { name: 'project_citizen_creation_notification', type: direct }

    consumers:
        mailer_campaign:
            connection:        default
            exchange_options:  { name: 'mailer-delayed-campaign', type: direct }
            queue_options:     { name: 'mailer-delayed-campaign', durable: false }
            callback:          AppBundle\Consumer\CampaignMailerConsumer
            qos_options:       { prefetch_size: 0, prefetch_count: 1, global: false }

        mailer_transactional:
            connection:        default
            exchange_options:  { name: 'mailer-delayed-transactional', type: direct }
            queue_options:     { name: 'mailer-delayed-transactional', durable: false }
            callback:          AppBundle\Consumer\TransactionalMailerConsumer
            qos_options:       { prefetch_size: 0, prefetch_count: 1, global: false }

        referent_message_dispatcher:
            connection:        default
            exchange_options:  { name: 'referent-message-dispatcher', type: direct }
            queue_options:     { name: 'referent-message-dispatcher', durable: false }
            callback:          AppBundle\Consumer\ReferentMessageDispatcherConsumer
            qos_options:       { prefetch_size: 0, prefetch_count: 1, global: false }

        project_citizen_creation_notification:
            connection:        default
            exchange_options:  { name: 'project_citizen_creation_notification', type: direct }
            queue_options:     { name: 'project_citizen_creation_notification', durable: false }
            callback:          AppBundle\Consumer\ProjectCitizenCreationNotificationConsumer
            qos_options:       { prefetch_size: 0, prefetch_count: 1, global: false }

        api_broadcast_user:
            connection:        default
            exchange_options:  { name: broadcast, type: topic }
            queue_options:     { name: enmarche_broadcast, routing_keys: ['#'] }
            callback:          app.consumer.user_account

hwi_oauth:
    firewall_names: [main]
    resource_owners:
        auth:
            type:                oauth2
            client_id:           "%env(AUTH_CLIENT_ID)%"
            client_secret:       "%env(AUTH_CLIENT_SECRET)%"
            access_token_url:    "%env(AUTH_API_URL)%/oauth/v2/token"
            authorization_url:   "%env(AUTH_API_URL)%/oauth/v2/auth"
            infos_url:           "%env(AUTH_API_URL)%/api/me"
            #scope:               "public"
            user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
            paths:
                identifier: emailAddress
                nickname: firstname
                firstname: firstName
                lastname: lastName
                realname: ['firstname', 'lastname']
                email: emailAddress
